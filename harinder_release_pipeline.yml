trigger: none

resources:
  pipelines:
    - pipeline: _TemplatesCI
      source: Template CI 3.0
    - pipeline: _BuildImageReleaseArtefacts
      source: Build Image Release Artefacts 3.0
  repositories:
    - repository: _lansa_azure_quickstart_templates
      type: github
      endpoint: nkhl-accolite
      name: lansa/azure-quickstart-templates
      ref: support/scalable
    # - repository: _robe070_cookbooks
    #   type: github
    #   endpoint: nkhl-accolite
    #   # name: robe070/cookbooks
    #   name: nkhl-accolite/cookbooks
    #   ref: debug/paas
    - repository: _robe070_cookbooks_nkhl
      type: github
      endpoint: nkhl-accolite
      name: robe070/cookbooks
      ref: debug/paas

variables:
  - group: Template Parameters
  - group: SKU Versions
  - group: Image Names
  - group: Azure Logins
  - group: Git Repos

stages:
# - template: AzureDevOps\templates\harinder_stages.yml
#   parameters:
#     dependsOn:
#     stageName: AUSSQLAZURE1DBw22r2d142
#     stageDisplayname: AUS SQLAZURE1 DB w22r2d-14-2
#     jobName: AUSSQLAZURE1DBw22r2d142
#     jobDisplayname: AUS SQLAZURE1 DB w22r2d-14-2
#     jobcondition: and(succeeded(), or(eq(variables['Build-w22r2d-14-2'], 'True'), eq(variables['Build-all'], 'True')))
#     version: w22r2d-14-2
#     osName: Windows Server 2022
#     SqlDeploymentName: SQLAZURE1
#     deploymentOutputs: SQLAZURE1-deploymentOutput
#     resourceGroup: SQLAZURE1-TEST

    
- template: AzureDevOps\templates\harinder_stages.yml
  parameters:
    dependsOn: 
    stageName: AUSSQLAZURE2DBw19d142
    stageDisplayname: AUS SQLAZURE2 DB w19d-14-2
    jobName: AUSSQLAZURE2DBw19d142
    jobDisplayname: AUS SQLAZURE2 DB w19d-14-2
    jobcondition: and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))
    databaseNewOrExisting: new
    lansaVersion: V14 SP2
    msiURL: $(msiURLv142)
    osName: Windows Server 2019
    requestedServiceObjectiveName: S0
    resourceGroup: SQLAZURE2-TEST
    SqlDeploymentName: SQLAZURE2
    stackName: SQL2VMSS
    version: w19d-14-2


- template: AzureDevOps\templates\harinder_stages.yml
  parameters:
    dependsOn: 
    stageName: AUSSQLAZURE3DBw16d142
    stageDisplayname: AUS SQLAZURE3 DB w16d-14-2
    jobName: AUSSQLAZURE3DBw16d142
    jobDisplayname: AUS SQLAZURE3 DB w16d-14-2
    jobcondition: and(succeeded(), or(eq(variables['Build-w16d-14-2'], 'True'), eq(variables['Build-all'], 'True')))
    databaseNewOrExisting: new
    lansaVersion: V14 SP2
    msiURL: $(msiURLv142)
    osName: Windows Server 2016
    requestedServiceObjectiveName: S4
    resourceGroup: SQLAZURE3-TEST
    SqlDeploymentName: SQLAZURE3
    stackName: SQL3VMSS
    version: w19d-14-2



# - template: AzureDevOps\templates\harinder_stages.yml
#   parameters:
#     dependsOn: 
#     stageName: AUSSQLAZURE4DBw19d150
#     stageDisplayname: AUS SQLAZURE4 DB w19d-15-0
#     jobName: AUSSQLAZURE4DBw19d150
#     jobDisplayname: AUS SQLAZURE4 DB w19d-15-0
#     jobcondition: and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))
#     version: w19d-15-0
#     stackName: SQL4VMSS
#     osName: Windows Server 2019
#     SqlDeploymentName: SQLAZURE4
#     deploymentOutputs: SQLAZURE4-deploymentOutput
#     resourceGroup: SQLAZURE4-TEST
#     applicationGatewaySkuTier: WAF
#     applicationGatewaySkuName: WAF_Medium
#     requestedServiceObjectiveName: S12
#     msiURL: $(msiURLv15)

# - template: AzureDevOps\templates\harinder_stages.yml
#   parameters:
#     dependsOn: 
#     stageName: AUSSQLAZURE5DBw16d150
#     stageDisplayname: AUS SQLAZURE5 DB w16d-15-0
#     jobName: AUSSQLAZURE5DBw16d150
#     jobDisplayname: AUS SQLAZURE5 DB w16d-15-0
#     jobcondition: and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))
#     version: w16d-15-0
#     osName: Windows Server 2016
#     SqlDeploymentName: SQLAZURE5
#     deploymentOutputs: SQLAZURE5-deploymentOutput
#     resourceGroup: SQLAZURE5-TEST

# - template: AzureDevOps\templates\harinder_stages.yml
#   parameters:
#     dependsOn: 
#     stageName: AUSSQLAZURE6DBw12r2d150
#     stageDisplayname: AUS SQLAZURE6 DB w12r2d-15-0
#     jobName: AUSSQLAZURE6DBw12r2d150
#     jobDisplayname: AUS SQLAZURE6 DB w12r2d-15-0
#     jobcondition: and(succeeded(), or(eq(variables['Build-w16d-15-0'], 'True'), eq(variables['Build-all'], 'True')))
#     version: w22r2d-15-0
#     osName: Windows Server 2022
#     SqlDeploymentName: SQLAZURE6
#     deploymentOutputs: SQLAZURE6-deploymentOutput
#     resourceGroup: SQLAZURE6-TEST


- template: AzureDevOps\templates\harinder_stages_2.yml
  parameters:
    dependsOn: 
    stageName: AUSMYSQL1DBw19d150
    stageDisplayname: AUS MYSQL1 DB w19d-15-0
    jobName: AUSMYSQL1DBw19d150
    jobDisplayname: AUS MYSQL1 DB w19d-15-0
    jobcondition: and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))
    databaseNewOrExisting: existing
    lansaVersion: V15 GA
    databaseType: MYSQL
    msiURL: $(msiURLv15)
    osName: Windows Server 2019
    requestedServiceObjectiveName: S12
    resourceGroup: mysql1Test
    SqlDeploymentName: mysql1Test
    stackName: MYSQLVMSS
    version: w19d-15-0

- template: AzureDevOps\templates\harinder_stages_2.yml
  parameters:
    dependsOn: 
    stageName: AUSMSSQLS1DBw19d142
    stageDisplayname: AUS MSSQLS1 DB w19d-14-2
    jobName: AUSMSSQLS1DBw19d142
    jobDisplayname: AUS MSSQLS1 DB w19d-14-2
    jobcondition: and(succeeded(), or(eq(variables['Build-w19d-14-2'], 'True'), eq(variables['Build-all'], 'True')))
    databaseType: MSSQLS
    databaseNewOrExisting: existing
    lansaVersion: V14 SP2
    msiURL: $(msiURLv142)
    osName: Windows Server 2019
    requestedServiceObjectiveName: S2
    resourceGroup: mssqls1Test
    SqlDeploymentName: mssqls1Test
    stackName: MSSQLVMSS
    version: w19d-15-0

- stage: ProductionStage
  displayName: Production Stage
  dependsOn: 
    - AUSMSSQLS1DBw19d142
    - AUSMYSQL1DBw19d150
    - AUSSQLAZURE3DBw16d142
    - AUSSQLAZURE2DBw19d142
  jobs: 
  - job: AgentlessJob
    displayName: 'Manual Intervention: Deploy Template'
    pool: server
    steps:
    - task: ManualIntervention@8
      displayName: 'Manual Intervention: Production Template'
      inputs:
        instructions: |
          Deploy the template to the Production Stage

- template: AzureDevOps\templates\harinder_stages.yml
  parameters:
    dependsOn: ProductionStage
    stageName: ProductionTestsw19d150
    stageDisplayname: Production Tests w19d-15-0
    jobName: ProductionTestsw19d150
    jobDisplayname: Production Tests w19d-15-0
    jobcondition: and(succeeded(), or(eq(variables['Build-w19d-15-0'], 'True'), eq(variables['Build-all'], 'True')))
    databaseNewOrExisting: new
    lansaVersion: V15 GA
    msiURL: $(msiURL)
    osName: Windows Server 2019
    requestedServiceObjectiveName: S4
    resourceGroup: TemplateProd-Test-w19d-15-0
    SqlDeploymentName: TemplateProd-Test-w19d-15-0
    stackName: "$(Gate.VersionClean)"
    version: w19d-15-0

- template: AzureDevOps\templates\harinder_stages.yml
  parameters:
    dependsOn: ProductionStage
    stageName: ProductionTestsw19d150j
    stageDisplayname: Production Tests w19d-15-0j
    jobName: ProductionTestsw19d150j
    jobDisplayname: Production Tests w19d-15-0j
    jobcondition: and(succeeded(), or(eq(variables['Build-w19d-15-0j'], 'True'), eq(variables['Build-all'], 'True')))
    databaseNewOrExisting: new
    lansaVersion: V15 GA
    msiURL: $(msiURLJPNLatest)
    osName: Windows Server 2019 JPN
    requestedServiceObjectiveName: S4
    resourceGroup: TemplateProd-Test-w19d-15-0j
    SqlDeploymentName: TemplateProd-Test-w19d-15-0j
    stackName: "$(Gate.VersionClean)"
    version: w19d-15-0j

- stage: TagAzureQuickstartTemplatesRepo
  dependsOn:
    - ProductionTestsw19d150
    - ProductionTestsw19d150j
  displayName: Tag azure-quickstart-templates repo
  jobs:
  - job: TagAzureQuickstartTemplatesRepo
    timeoutInMinutes: 120

    cancelTimeoutInMinutes: 1
    condition: and(succeeded())
    displayName: Tag azure-quickstart-templates repo
    

    pool:
      vmImage: Windows-2022

    steps:
    - task: PowerShell@2
      displayName: 'Artifact Check - Set Gate Variable'
      name: Gate
      inputs:
        targetType: filePath
        filePath: '$(Pipeline.Workspace)/_robe070_cookbooks_nkhl/scripts/azure_set_gate_variable.ps1'
        arguments: '-Version "w19d-15-0" -osName "Windows Server 2019"'

    - powershell: |
        # Print the Gate variables.
        if ( $(Gate.IsEnabled) -eq 'True' ) {
            Write-Host "Gate.IsEnabled: $(Gate.IsEnabled); Gate.ImageUrl: $(Gate.ImageUrl) Gate.Sku: $(Gate.Sku)" | Out-Default
        } else {
         Write-Host 'Gate.IsEnabled is set to false.'
        }
      displayName: 'Artifact Check - Output Gate Variable'

    - task: PowerShell@2
      displayName: 'Write access to Git Repo'
      inputs:
        targetType: filePath
        filePath: '$(Pipeline.Workspace)/_robe070_cookbooks_nkhl/scripts/GitRepoWriteAccess.ps1'
        arguments: '-GitBranch ''$(TemplatesBranchLive)'' -GitURL ''https://$(GitRobe070CookbooksPAT):x-oauth-basic@$(TemplatesGitHubName)'' -GitUserEmail ''$(GitUserEmail)'' -GitUserName ''$(GitUserName)'' -GitRepoName ''$(TemplatesSourceAlias)'''

    - task: PowerShell@2
      displayName: 'Tag Git repo'
      inputs:
        targetType: filePath
        filePath: '$(Pipeline.Workspace)/_robe070_cookbooks_nkhl/scripts/GitTag.ps1'
        arguments: '-GitRepoName ''$(TemplatesSourceAlias)'' -Tags ''AzureTemplate-Bld-$(Build.BuildId)-$(Release.ReleaseName)-$(Gate.Sku)'''